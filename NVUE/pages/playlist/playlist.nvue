<template>
	<view class="page wyy-main-color">
		<view class="top">
			<view class="playlist_intro" @tap="test">
				<view class="intro-left">
					<image class="cover-image" :src="tmp_image"></image>
				</view>
				<view class="intro-right">
					<text class="name">{{tmp_name}}</text>
					<view class="creator">
						<image class="creator-headimg" :src="playlist.creator.avatarUrl"></image>
						<text class="creator-nickname">{{playlist.creator.nickname}}</text>
						<wyy-icon type="&#xe79b;" size="20" color="rgba(255,255,255,.6)" ></wyy-icon>
					</view>
					<view class="intro-footer">
						<text class="description">{{playlist.description || ''}}</text>
						<wyy-icon type="&#xe79b;" size="20" color="rgba(255,255,255,.6)" ></wyy-icon>
					</view>
				</view>
			</view>
			<view class="handle">
				<div class="c-bar">
					<wyy-icon type="&#xe668;" size="40" color="#FFFFFF" ></wyy-icon>
					<text class="c-bar-name">评论</text>
				</div>
				<div class="c-bar">
					<wyy-icon type="&#xe667;" size="40" color="#FFFFFF" ></wyy-icon>
					<text class="c-bar-name">分享</text>
				</div>
				<div class="c-bar">
					<wyy-icon type="&#xe666;" size="40" color="#FFFFFF" ></wyy-icon>
					<text class="c-bar-name">下载</text>
				</div>
				<div class="c-bar">
					<wyy-icon type="&#xe665;" size="40" color="#FFFFFF" ></wyy-icon>
					<text class="c-bar-name">多选</text>
				</div>
			</view>
		</view>
		
		
		
		<view class="bottom" style="padding-bottom: 90rpx;">
			<view class="top-bar">
				<view class="icon">
					<wyy-icon type="&#xe601;" size="40" color="#000000" ></wyy-icon>
				</view>
				<text class="top-bar-text">播放全部(共{{playlist.trackCount}}首)</text>
			</view>
			<list class="musics" show-scrollbar="false">
				<cell class="music" v-for="(music, index) in playlist.tracks" :key="index" @tap="play(music)">
					
					<view class="music-index">
						<text class="index-text">{{index + 1}}</text>
						<!-- <wyy-icon type="&#xe601;" size="40" color="#000000" ></wyy-icon> -->
					</view>
					<view class="music-info">
						<text class="music-name">{{music.name}}</text>
						<view class="music-creators">
							<text class="music-creator" v-for="(creator, c_index) in music.ar" :key="c_index">{{creator.name + ' '}}</text>
							<text class="music-al">- {{music.al.name}}</text>
						</view>
						
					</view>
					
				</cell>
			</list>
			
			
		</view>
		
		<wyy-play v-if="played"></wyy-play>
		
	</view>
</template>

<script>
	import wyyIcon from '@/components/uni-icon.vue';
	import wyyPlay from '@/components/wyy-play/wyy_play.nvue';
	
	import $repeater from '@/utils/repeater.js';
	export default {
		components: {
			wyyIcon,
			wyyPlay
		},
		data() {
			return {
				show_play: false,
				playlist_id: '',
				
				tmp_name: '',
				tmp_image: '',
				playlist: {
					creator: {
						
					}
				},
			}
		},
		computed: {
			played: function() {
				return this.$store.state.played;
			}
		},
		onLoad(option) {
			this.playlist_id = option.playlist_id;
			this.tmp_name = option.name;
			this.tmp_image = option.cover_image;
			
			uni.setNavigationBarTitle({
			    title: this.tmp_name
			});
			
			this.get_playlist_detail();
			
		},
		onReady() {
			
		},
		onShow() {
			
		},
		beforeDestroy() {
			
		},
		methods: {
			test() {
				$repeater.helper.to('../search/search')
			},
			// 播放
			// 如果选中歌曲和底部播放组件是同一首歌, 则跳转到播放页并开始播放
			// 如果不同, 则开始播放新选中的歌曲, 更新播放组件信息, 不跳转
			play(music) {
				
				let music_id = music.id;
				let music_name = music.name;
				let cover_image = music.al.picUrl;
				
				let current_played = this.played;
				
				let played_music_id = current_played.id;
				
				if (music_id == played_music_id) {
					// 跳转播放详情页并播放
					console.log('跳转');
				}else {
					// 获取音乐url
					$repeater.song.get_song_url(music_id, (res)=> {
						let url = res.data[0].url;
						console.log(url);
						if (!url) {
							$repeater.helper.toast('none', '亲爱的, 暂无该歌曲资源~', 3000, false, 'bottom');
							return;
						}
						
						let creators = music.ar;
						let creator_str = '';
						
						for (let creator of creators) {
							creator_str = creator_str + creator.name;
						}
						
						let played = {
							id: music_id,
							url: url,
							name: music_name,
							creator: creator_str,
							cover_image: cover_image,
							time: 0, //上次播放的位置
						}
						
						this.$store.commit('set_played', played);
						
						$repeater.player.start();
						//直接开始播放, 不用跳转
					});
					
					
				}
				
			},
			get_playlist_detail() {
				let playlist_id = this.playlist_id;
				$repeater.playlist.get_playlist_detail(playlist_id, (data)=> {
					let playlist = data.playlist;
					this.playlist = playlist;
				});
			}
		}
	}
</script>

<style>
	@import '../../common/wyy.css';
	.page {
		
		padding-top: 50rpx;
	}
	.top {
		width: 750rpx;
		padding: 0 30rpx;
	}
	.bottom {
		width: 750rpx;
		background-color: #FFFFFF;
		border-top-left-radius: 25;
		border-top-right-radius: 25;
	}
	
	.background {
		width: 750rpx;
	}
	.playlist_intro {
		flex-direction: row;
	}
	.cover-image {
		width: 230rpx;
		height: 230rpx;
		border-radius: 10rpx;
	}
	.intro-left {
		padding-right: 30rpx;
	}
	.intro-right {
		width: 430rpx;
		padding-top: 5rpx;
	}
	.name {
		color: #FFFFFF;
		font-size: 30rpx;
		font-weight: bold;
	}
	.creator {
		flex-direction: row;
		align-items: center;
		margin-top: 20rpx;
	}
	.creator-headimg {
		width: 50rpx;
		height: 50rpx;
		border-radius: 50;
	}
	.creator-nickname {
		font-size: 20rpx;
		color: rgba(255,255,255,.6);
		margin-left: 20rpx;
	}
	.description {
		font-size: 18rpx;
		color: rgba(255,255,255,.5);
		text-overflow: ellipsis;
		width: 430rpx;
		lines: 2;
	}
	.intro-footer {
		flex-direction: row;
		position: absolute;
		left: 0;
		bottom: 5rpx;
		text-overflow: ellipsis;
	}
	.handle {
		width: 690rpx;
		height: 140rpx;
		flex-direction: row;
		
		align-items: center;
		justify-content: space-between;
	}
	.c-bar {
		width: 150rpx;
		padding: 10rpx 0;
		flex-direction: column;
		align-items: center;
	}
	.c-bar-name{
		font-size: 18rpx;
		color: #FFFFFF;
		margin-top: 10rpx;
	}
	
	.top-bar {
		position: sticky;
		top: 0;
		flex-direction: row;
		align-items: center;
		width: 750rpx;
		height: 90rpx;
		border-top-left-radius: 25;
		border-top-right-radius: 25;
		background-color: #FFFFFF;
	}
	.icon {
		padding: 0 30rpx;
	}
	.top-bar-text {
		font-size: 26rpx;
		color: #000000;
	}
	.musics {
		background-color: #FFFFFF;
	}
	.music {
		flex-direction: row;
		width: 750rpx;
		height: 100rpx;
		
	}
	.music:active{
		background-color: rgba(0,0,0,0.1);
	}
	.music-index {
		justify-content: center;
		align-items: center;
		width: 100rpx;
	}
	.index-text {
		font-size: 26rpx;
		color: rgba(0,0,0,0.3);
	}
	.music-info {
		width: 650rpx;
		height: 100rpx;
		justify-content: center;
	}
	.music-name {
		font-size: 26rpx;
	}
	.music-creators {
		margin-top: 5rpx;
		flex-direction: row;
	}
	.music-creator {
		font-size: 18rpx;
		color: rgba(0,0,0,0.3);
	}
	.music-al {
		font-size: 18rpx;
		color: rgba(0,0,0,0.3);
	}
</style>
