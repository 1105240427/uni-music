<template>
	<div class="wyy-bg-color">
		<div class="status-bar wyy-main-color" :style="{height: config.statusBarHeight+'wx'}"></div>

		<lxy-tabs @change="changeTab" :index="tabIndex">
			<lxy-tab-bar :sideBarWidth="sideBarWidth" drag="true" :tab-bars="tabBars" :tab-index="tabIndex">
				<lxy-side-bar :height="deviceHeight" :width="sideBarWidth"></lxy-side-bar>
			</lxy-tab-bar>

			<lxy-tab-content>
				<scroller show-scrollbar=false v-for="(tab,tIndex) in tabBars" :key="tIndex">
					<refresh v-if="tab.id != 'mine'" class="wyy-main-color refresh" @refresh="onrefresh" @pullingdown="onpullingdown" :display="refreshDisplay">
						<loading-indicator class="indicator"></loading-indicator>
					</refresh>

					<wyy-find v-if="tab.id == 'find'" :categoryBars="categoryBars"></wyy-find>
					<wyy-mine v-else-if="tab.id == 'mine'"></wyy-mine>
					<div v-else>{{tab.name}}</div>


					<loading v-if="tab.id != 'mine'" class="loading" @loading="onloading" :display="loadinging ? 'show' : 'hide'">
						<loading-indicator class="indicator"></loading-indicator>
					</loading>
				</scroller>
			</lxy-tab-content>

		</lxy-tabs>
	</div>
</template>

<script>
	import lxyTabContent from '@/components/lxy-tab-nvue/lxy_tab_content.nvue'
	import lxyTabBar from '@/components/lxy-tab-nvue/lxy_tab_bar.nvue'
	import lxyTabs from '@/components/lxy-tab-nvue/lxy_tabs.nvue'
	import lxySideBar from '@/components/lxy-tab-nvue/lxy_side_bar.nvue';
	import wyyFind from '@/components/wyy-find/wyy_find.nvue';
	import wyyMine from '@/components/wyy-mine/wyy_mine.nvue';

	import style from '@/config/style.js';

	

	export default {
		components: {
			lxyTabContent,
			lxyTabBar,
			lxyTabs,
			lxySideBar,
			wyyFind,
			wyyMine
		},
		data() {
			return {
				refreshing: false,
				loadinging: false,
				sideBarWidth: 640,
				deviceHeight: 0,
				config: {},
				tabIndex: 1,
				tabBars: [{
					name: '我的',
					id: 'mine'
				}, {
					name: '发现',
					id: 'find'
				}, {
					name: '朋友',
					id: 'friend'
				}, {
					name: '视频',
					id: 'video'
				}]
			}
		},
		computed: {
			refreshDisplay() {
				return this.refreshing ? 'show' : 'hide'
			}
		},
		created() {
			uni.getStorage({
				key: '_config',
				success: (res) => {
					this.config = JSON.parse(res.data);
					this.deviceHeight = this.config.windowHeight;
				}
			})


		},
		methods: {
			async changeTab(e) {
				this.tabIndex = e.index;
			},

			onrefresh(event) {
				this.refreshing = true
				setTimeout(() => {
					this.refreshing = false
				}, 1000)
			},
			onpullingdown(event) {

			},
			onloading(event) {
				this.loadinging = true
				setTimeout(() => {
					this.loadinging = false
				}, 2000)
			},
		}
	}
</script>

<style src="@/common/wyy.css"></style>
<style>
	.status-bar {
		width: 750px;
	}

	.refresh {
		width: 750;
		display: -ms-flex;
		display: -webkit-flex;
		display: flex;
		-ms-flex-align: center;
		-webkit-align-items: center;
		-webkit-box-align: center;
		align-items: center;
	}

	.indicator-text {
		color: #888888;
		font-size: 42px;
		text-align: center;
	}

	.indicator {
		background-color: #FFFFFF;
		border-radius: 50%;
		height: 70px;
		width: 70px;
		color: #FF0000;
	}

	.loading {
		width: 750;
		display: -ms-flex;
		display: -webkit-flex;
		display: flex;
		-ms-flex-align: center;
		-webkit-align-items: center;
		-webkit-box-align: center;
		align-items: center;
	}
</style>
